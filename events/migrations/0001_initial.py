# Generated by Django 5.0.1 on 2024-01-18 03:05

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='Название мероприятия')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание мероприятия')),
                ('image', models.ImageField(upload_to='events_images', verbose_name='Афиша мероприятия')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата проведения мероприятия')),
            ],
            options={
                'verbose_name': 'Мероприятие',
                'verbose_name_plural': 'Мероприятия',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='Название организации')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание организации')),
                ('address', models.CharField(max_length=128, verbose_name='Адрес организации')),
                ('postcode', models.CharField(max_length=6, verbose_name='Почтовый индекс')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=25, null=True, verbose_name='Фамилия')),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, verbose_name='Номер телефона')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Статус персонала сервиса')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='EventOrganizers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Участие пользователя в организации мероприятий',
                'verbose_name_plural': 'Участие пользователей в организации мероприятий',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='events',
            field=models.ManyToManyField(blank=True, through='events.EventOrganizers', to='events.event', verbose_name='Мероприятий, в которых участвует пользователь'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.organization', verbose_name='Организация, в которой работает пользователь'),
        ),
        migrations.CreateModel(
            name='OrganizationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
                ('organization_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.organization')),
            ],
            options={
                'verbose_name': 'Связь организации и мероприятия',
                'verbose_name_plural': 'Cвязи организаций и мероприятий',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='organizations',
            field=models.ManyToManyField(through='events.OrganizationEvent', to='events.organization', verbose_name='Организовывающие организации'),
        ),
    ]
